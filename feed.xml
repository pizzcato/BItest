<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://pizzcato.github.io/BItest/</id><title>Pizzcato's blob</title><subtitle>New test.</subtitle> <updated>2023-10-18T11:51:27+08:00</updated> <author> <name>pizzcato</name> <uri>https://pizzcato.github.io/BItest/</uri> </author><link rel="self" type="application/atom+xml" href="https://pizzcato.github.io/BItest/feed.xml"/><link rel="alternate" type="text/html" hreflang="en-US" href="https://pizzcato.github.io/BItest/"/> <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator> <rights> © 2023 pizzcato </rights> <icon>/BItest/assets/img/favicons/favicon.ico</icon> <logo>/BItest/assets/img/favicons/favicon-96x96.png</logo> <entry><title>geoserver 颜色插值</title><link href="https://pizzcato.github.io/BItest/posts/geoserver-sld-interpolate/" rel="alternate" type="text/html" title="geoserver 颜色插值" /><published>2023-10-09T15:24:58+08:00</published> <updated>2023-10-09T15:24:58+08:00</updated> <id>https://pizzcato.github.io/BItest/posts/geoserver-sld-interpolate/</id> <content src="https://pizzcato.github.io/BItest/posts/geoserver-sld-interpolate/" /> <author> <name>pizzcato</name> </author> <category term="GIS" /> <category term="geoserver" /> <summary> 颜色插值说明 颜色插值,就是根据某个字段属性的值,根据划定的颜色范围自动映射成相应的颜色. 如有些用红色表示最坏,绿色表示最好,而中间的颜色就可以自动划分,生成渐变有序的渲染效果. style设置 在sld中修改原先的&amp;lt;se:SvgParameter&amp;gt;&amp;lt;/se:SvgParameter&amp;gt;来实现. 示例: before: &amp;lt;se:SvgParameter name="stroke"&amp;gt;#848587&amp;lt;/se:SvgParameter&amp;gt; after: &amp;lt;se:SvgParameter name="stroke"&amp;gt; &amp;lt;ogc:Function name="Interpolate"&amp;gt; &amp;lt;!-- Property to transform --&amp;gt; &amp;lt;ogc:Pr... </summary> </entry> <entry><title>GEOSERVER主动请求被动缓存的方法</title><link href="https://pizzcato.github.io/BItest/posts/geoserver-active-cache/" rel="alternate" type="text/html" title="GEOSERVER主动请求被动缓存的方法" /><published>2022-04-21T13:06:14+08:00</published> <updated>2022-04-21T13:58:24+08:00</updated> <id>https://pizzcato.github.io/BItest/posts/geoserver-active-cache/</id> <content src="https://pizzcato.github.io/BItest/posts/geoserver-active-cache/" /> <author> <name>pizzcato</name> </author> <category term="GIS" /> <summary> 使用于openlayers读取geoserver图片瓦片图层 前提 geoserver的图层已经配置好了被动缓存 思路 geoserver底层是以900913(web墨卡托坐标系,即x,y,z格式)存储缓存文件 openlayers在页面上的请求链接是使用了3857坐标系的bbox,格式是minx,miny,maxx,maxy 在判断时,geoserver会将请求的链接转换成web墨卡托的xyz,转换时会转成整型,所以页面请求链接只要bbox的坐标偏差不大,是可以读取到缓存的 根据熟知的4326经纬度可以转换成3857,再通过3857转换成900913 根据900913的xyz可以逆向转换回3857坐标 graph LR A(开始)--&amp;gt;B[4326经纬度范围]--&amp;gt;C[3857墨卡托]--&amp;gt;D[900913XYZ范... </summary> </entry> <entry><title>Dota2载入图Mod</title><link href="https://pizzcato.github.io/BItest/posts/Dota2-start-up/" rel="alternate" type="text/html" title="Dota2载入图Mod" /><published>2021-10-30T08:42:52+08:00</published> <updated>2021-10-30T08:42:52+08:00</updated> <id>https://pizzcato.github.io/BItest/posts/Dota2-start-up/</id> <content src="https://pizzcato.github.io/BItest/posts/Dota2-start-up/" /> <author> <name>pizzcato</name> </author> <category term="Dota2" /> <summary> 图片准备 图片格式可以为jpg/png/psd,但是要求长和宽必须为2的幂数 图片的像素会影响生成文件的大小,我使用的上图分辨率,最后生成的vtex_c大小约为5m in Workshop Tools 选择Material editor 新建一个贴图文件vmat 保存vmat到工作目录的materials文件夹下1 Shaders选择Unlit2 in Unlit Options 勾选Translucent支持图层的透明度(jpg不支持透明度,可选可不选,最好选上) 在Color贴图里选择要使用的图片3 点击进入Texture Settings in Texture Settings 此项设置我也不是很清楚原理,也不清楚具体是哪项设置起效的 按图上设置就vans了 需要注... </summary> </entry> <entry><title>PostGis常用函数</title><link href="https://pizzcato.github.io/BItest/posts/Postgis-frequent/" rel="alternate" type="text/html" title="PostGis常用函数" /><published>2021-09-04T13:09:17+08:00</published> <updated>2022-04-10T09:41:45+08:00</updated> <id>https://pizzcato.github.io/BItest/posts/Postgis-frequent/</id> <content src="https://pizzcato.github.io/BItest/posts/Postgis-frequent/" /> <author> <name>pizzcato</name> </author> <category term="postgis" /> <summary> 查看postgis版本 select postgis_version() ; --or select postgis_full_version() ; 對象操作 功能 函數 說明 示例 圖形縮放 ST_TransScale(geometry geomA, float deltaX, float deltaY, float XFactor, float YFactor) 將圖形縮放(XFactor,YFactor)倍,基於(deltaX,deltaY) select spolygon,ST_TransScale(spolygon,longitude,latitude,0.5,0.5)as geom from tablexxx ... </summary> </entry> <entry><title>gp导入csv数据</title><link href="https://pizzcato.github.io/BItest/posts/gp-import/" rel="alternate" type="text/html" title="gp导入csv数据" /><published>2021-05-31T15:21:55+08:00</published> <updated>2021-05-31T16:28:35+08:00</updated> <id>https://pizzcato.github.io/BItest/posts/gp-import/</id> <content src="https://pizzcato.github.io/BItest/posts/gp-import/" /> <author> <name>pizzcato</name> </author> <category term="database" /> <category term="greenplum" /> <summary> csv文件一般通过COPY命令导入gp,如果数据量不大的话也可以通过第三方工具远程导入。 COPY方式 适用于数据量较大且能够登上服务器的情况 COPY是gp在表和文件之间快速拷贝数据的方法1 前提准备 数据库中建好要导入数据的表2 数据文件上传至gp的服务器上 登入gp Shell 导入命令 COPY table FROM file WITH option 命令示例 COPY cfg_map_scene_geo FROM '/home/gpadmin/weiyz/xyl/cfg_map_scene_geo.csv' With csv header; TIPS 成功导入会输出COPY count,count为导入的记录数 可以指定要导入对象的列: COPY c... </summary> </entry> </feed>
